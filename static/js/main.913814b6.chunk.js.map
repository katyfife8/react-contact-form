{"version":3,"sources":["components/Input/Input.jsx","components/Message/Message.jsx","components/Button/Button.jsx","components/Form/Form.jsx","App.js","reportWebVitals.js","index.js"],"names":["Input","props","className","htmlFor","id","title","type","placeholder","value","onChange","error","Message","Button","onClick","name","Form","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","enquiryType","setEnquiryType","message","setMessage","firstNameError","setFirstNameError","lastNameError","setLastNameError","emailError","setEmailError","passwordError","setPasswordError","onSubmit","e","preventDefault","alert","required","newFirstName","target","length","newLastName","newEmail","test","newPassword","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.913814b6.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./Input.css\";\n\nconst Input = (props) => {\n  return (\n    <div className=\"input-field\">\n      <label htmlFor={props.id}>{props.title}</label>\n      <input\n        type={props.type}\n        id={props.id}\n        placeholder={props.placeholder}\n        value={props.value}\n        onChange={props.onChange}\n      />\n      {props.error && <p className=\"input-error\">{props.error}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import React from \"react\";\n\nimport \"./Message.css\";\n\nconst Message = (props) => {\n  return (\n    <div className=\"input-field\">\n      <label htmlFor={props.id}>{props.title}</label>\n      <textarea value={props.value} onChange={props.onChange}></textarea>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\n\nimport \"./Button.css\";\n\nconst Button = (props) => {\n  return (\n    <button\n      type=\"props.type || button\"\n      className=\"button\"\n      onClick={props.onClick}\n    >\n      {props.name}\n    </button>\n  );\n};\n\nexport default Button;\n","import React, { useState } from \"react\";\nimport \"./Form.css\";\nimport Input from \"../Input/Input\";\nimport Message from \"../Message/Message\";\nimport Button from \"../Button/Button\";\n\nfunction Form() {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [enquiryType, setEnquiryType] = useState(\"\");\n  const [message, setMessage] = useState(\"\");\n\n  const [firstNameError, setFirstNameError] = useState(\"\");\n  const [lastNameError, setLastNameError] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault();\n\n    if (firstNameError || lastNameError || emailError || passwordError) {\n      alert(\"Thank you for getting in touch!\");\n    } else {\n      alert(\"Please complete all fields.\");\n    }\n  };\n\n  const handleFirstNameChange = (e) => {\n    const newFirstName = e.target.value;\n    setFirstName(newFirstName);\n    if (newFirstName.length === 0) {\n      setFirstNameError(\"First name field cannot be blank.\");\n    }\n  };\n\n  const handleLastNameChange = (e) => {\n    const newLastName = e.target.value;\n    setLastName(newLastName);\n    if (newLastName.length === 0) {\n      setLastNameError(\"Last name field cannot be blank.\");\n    }\n  };\n\n  const handleEmailChange = (e) => {\n    const newEmail = e.target.value;\n    setEmail(newEmail);\n\n    if (newEmail.length === 0) {\n      setEmailError(\"Email field cannot be blank.\");\n    } else if (\n      !/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(\n        newEmail\n      )\n    ) {\n      setEmailError(\"Please enter a valid email address.\");\n    } else {\n      setEmailError(\"\");\n    }\n  };\n\n  const handlePasswordChange = (e) => {\n    const newPassword = e.target.value;\n    setPassword(newPassword);\n\n    if (newPassword.length === 0) {\n      setPasswordError(\"Password field cannot be blank.\");\n    } else if (newPassword.length < 8) {\n      setPasswordError(\"Password must contain a minimum of 8 characters.\");\n    } else if (!/\\d/.test(newPassword)) {\n      setPasswordError(\"Password must contain at least 1 number.\");\n    } else {\n      setPasswordError(\"\");\n    }\n  };\n\n  return (\n    <div className=\"form-container\">\n      <form onSubmit={handleFormSubmit}>\n        <div className=\"input-fields\">\n          <Input\n            type=\"text\"\n            required\n            title=\"First name\"\n            id=\"first-name\"\n            value={firstName}\n            onChange={handleFirstNameChange}\n            error={firstNameError}\n          />\n\n          <Input\n            type=\"text\"\n            required\n            title=\"Last name\"\n            id=\"first-name\"\n            value={lastName}\n            onChange={handleLastNameChange}\n            error={lastNameError}\n          />\n          <Input\n            type=\"email\"\n            required\n            title=\"Email\"\n            id=\"email\"\n            placeholder=\"email@address.com\"\n            value={email}\n            onChange={handleEmailChange}\n            error={emailError}\n          />\n\n          <Input\n            type=\"password\"\n            required\n            title=\"Password\"\n            id=\"password\"\n            value={password}\n            onChange={handlePasswordChange}\n            error={passwordError}\n          />\n\n          <div className=\"input-field\">\n            <label>What can we help you with?</label>\n            <div className=\"dropdown-field\">\n              <select\n                value={enquiryType}\n                onChange={(e) => setEnquiryType(e.target.value)}\n              >\n                <option value=\"ceramics\">Ceramics</option>\n                <option value=\"photography\">Photography</option>\n                <option value=\"order\">An order</option>\n                <option value=\"press\">Press</option>\n              </select>\n            </div>\n          </div>\n\n          <Message\n            title=\"Your message\"\n            value={message}\n            onChange={(e) => setMessage(e.target.value)}\n          />\n          <Input type=\"checkbox\" title=\"Sign up for emails\" id=\"subscribe\" />\n        </div>\n        <Button type=\"submit\" name=\"SUBMIT\" />\n      </form>\n    </div>\n  );\n}\n\nexport default Form;\n","import React from \"react\";\n\nimport \"./App.css\";\n\nimport Form from \"./components/Form/Form\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>REACT FORM MILESTONE</h1>\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}